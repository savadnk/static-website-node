/**
 * Enables dynamic prototypal inheritance between classes, allowing for flexible and reusable code.
 *
 * The `inheritsDirectly` function is compatible with both ES5 and ES6, as well as older browsers that do not support these versions of JavaScript.
 * The function also supports CoffeeScript-generated classes
 *
 * **Note**: If a parent class already exists on the class, it will be replaced by the new parent class.
 *
 * @param {Function} ctor  The child class that will inherit from the parent class.
 * @param {Function} superCtor The parent class from which the child class will inherit.
 * @param {boolean} [staticInherit=true] Optional A boolean flag indicating whether the child class should also inherit static properties and methods from the parent class. The default value is `true`.
 */
export function inheritsDirectly(ctor: Function, superCtor: Function, staticInherit?: boolean): void;
export default inheritsDirectly;
