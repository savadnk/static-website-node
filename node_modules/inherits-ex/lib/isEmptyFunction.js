"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.isEmptyFunction = isEmptyFunction;
var _isEmptyCtor = _interopRequireDefault(require("./isEmptyCtor.js"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/**
 * Checks whether a given function is empty or not.
 * @param {Function} aFunc - The function to be checked.
 * @returns {boolean} - True if the function is empty, false otherwise.
 *
 * @example
 * isEmptyFunction(Array.prototype.push); // -> false
 * isEmptyFunction(()=>{}); // -> true
*/
function isEmptyFunction(aFunc) {
  const vStr = aFunc.toString();
  let result = /^(function\s+)?\S*\s*\((.|[\n\r\u2028\u2029])*\)\s*{[\s;\n\r]*}$/g.test(vStr);
  if (!result) {
    result = /^\((.|[\n\r\u2028\u2029])*\)\s*=>\s*{[\s;]*}$/g.test(vStr);
  }
  if (!result) {
    result = (0, _isEmptyCtor.default)(vStr);
  }

  // if (!result) {
  //   if (!istanbul)
  //     try {istanbul = eval("require('istanbul')");} catch(e){}
  //   if (istanbul)
  //     result = /^function\s*\S*\s*\((.|[\n\r\u2028\u2029])*\)\s*{__cov_[\d\w_]+\.f\[.*\]\+\+;}$/.test(vStr);
  // }
  return result;
}
;
var _default = isEmptyFunction;
exports.default = _default;