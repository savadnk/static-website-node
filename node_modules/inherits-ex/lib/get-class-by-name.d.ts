/**
 * Retrieve a class from the registered classes in the scope by its name.
 *
 * @param {string|Function} aClassName The class name or class. if it's class return it directly.
 * @param {Function|string[]|Function[]|{[name: string]: Function}=} aScope  The scope with all registered classes.
 *     it'll be called to find the class if the aScope is a `function(className):Function`
 * @param {Function[]=} aValues If `aScope` is an array of strings, then `aValues` must exist and can only be an array of corresponding classes.
 * @returns {Function|undefined} return the found class or undefined
 */
export function getClassByName(aClassName: string | Function, aScope?: Function | string[] | Function[] | {
    [name: string]: Function;
}, aValues?: Function[] | undefined): Function | undefined;
export default getClassByName;
